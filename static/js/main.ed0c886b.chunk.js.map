{"version":3,"sources":["ReactiveInput.tsx","index.tsx"],"names":["ReactiveInput","label","maxLength","Infinity","useState","currentInput","setCurrentInput","className","htmlFor","type","name","value","onChange","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"mKA2BeA,G,KAnBoD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAkC,IAA3BC,iBAA2B,MAAfC,IAAe,IAC5DC,mBAAS,IADmD,mBAC7FC,EAD6F,KAC/EC,EAD+E,KAGpG,OACI,yBAAKC,UAAU,iBACX,2BAAOC,QAAQ,iBAAiBP,GAChC,2BACIQ,KAAK,OACLC,KAAK,gBACLC,MAAON,EACPO,SAAU,SAACC,GAAWP,EAAgBO,EAAMC,OAAOH,UAEvD,uBAAGJ,UAAWF,EAAaU,OAASb,EAAY,UAAY,IACvDG,MCjBjBW,IAASC,OACL,kBAAC,EAAD,CAAehB,MAAM,sBAAsBC,UAAW,KACtDgB,SAASC,eAAe,U","file":"static/js/main.ed0c886b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport \"./ReactiveInput.css\"\n\ninterface ReactiveInputProps {\n    label: string,\n    maxLength?: number\n}\n\nconst ReactiveInput: React.FunctionComponent<ReactiveInputProps> = ({ label, maxLength = Infinity }) => {\n    const [currentInput, setCurrentInput] = useState(\"\")\n\n    return (\n        <div className=\"reactiveInput\">\n            <label htmlFor=\"reactiveInput\">{label}</label>\n            <input\n                type=\"text\"\n                name=\"reactiveInput\"\n                value={currentInput}\n                onChange={(event) => {setCurrentInput(event.target.value)}}\n            />\n            <p className={currentInput.length > maxLength ? \"invalid\" : \"\"}>\n                {currentInput}\n            </p>\n        </div>\n    )\n}\n\nexport default ReactiveInput\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactiveInput from './ReactiveInput';\n\nReactDOM.render(\n    <ReactiveInput label=\"Hello ICALEPCS 2019\" maxLength={10} />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}